import java.util.regex.*;
server = args.length>1 ? args[1] : "www.twdata.org";
user = args.length>2 ? args[2] : "mrdon";
prompt = args.length>3 ? args[3] : ":~>";

printValues(regex, raw, fileWriter) {
	m = Pattern.compile(regex).matcher(raw);
	m.matches();
	for (x=1; x<=m.groupCount(); x++) 
		fileWriter.write("|"+m.group(x));
}

addLogEntry(fileWriter) {
	
	ssh.connect(server, user);
	ssh.setTimeout(20000);
	ssh.waitFor(prompt);
	ssh.sendLine("date");
	fileWriter.write(ssh.getLine());
	ssh.sendLine("top -b -n 1");
	
	printValues(".*average: ([0-9.]+), ([0-9.]+), ([0-9.]+)", ssh.getLine(), fileWriter);
	
	// swallow tasks
	ssh.getLine();
	// swallow cpu
	ssh.getLine();
	
	printValues("Mem:\\s+([0-9k]+) total,\\s+([0-9k]+) used,\\s+([0-9k]+).*", ssh.getLine(), fileWriter);
	printValues("Swap:\\s+([0-9k]+) total,\\s+([0-9k]+) used,\\s+([0-9k]+).*", ssh.getLine(), fileWriter);
	
	// swallow empty line
	ssh.getLine();
	// swallow proc headers
	ssh.getLine();
	
	cols = ssh.getLine().split("\\s+");
	fileWriter.write("|"+cols[cols.length-1]+"|"+cols[cols.length-4]+"|"+cols[cols.length-3]);
	
	fileWriter.write("\n");
	
	ssh.disconnect();
}

writeLogToRss(in, out) {
	log = new BufferedReader(in);
	rss = new PrintWriter(out);
	
	rss.println("<?xml version=\"1.0\" encoding=\"ISO-8859-1\" ?>");
    rss.println("<rss version=\"2.0\">");

    rss.println("<channel>");
  	rss.println("<title>"+server+" Stats</title>");
  	rss.println("<link>ssh://"+server+"</link>");
  	rss.println("<description>Free web building tutorials</description>");

	
	lines = new LinkedList();
	while ((line = log.readLine()) != null) {
	    lines.addFirst(line);
	    if (lines.size() > 20)
	    	lines.removeLast();
	}
	
	for (line : lines) {
		vals = line.split("\\|");
		rss.println("<item>");
		rss.println("<title>load average: "+vals[1]+", "+vals[2]+", "+vals[3]+"</title>");
		rss.println("<link>ssh://"+server+"</link>");
		rss.println("<description>");
		rss.println("load average: "+vals[1]+", "+vals[2]+", "+vals[3]+"<br />");
		rss.println("Mem:  "+vals[4]+" total, "+vals[5]+" used, "+vals[6]+" free<br />");
		rss.println("Swap: "+vals[7]+" total, "+vals[8]+" used, "+vals[9]+" free<br />");
		rss.println("Top Process: "+vals[10]+" "+vals[11]+"% CPU, "+vals[12]+"% Mem");
		rss.println("</description>");
		rss.println("</item>");	
	}    	
	
	rss.println("</channel>");
	rss.println("</rss>");
		
}

log = new FileWriter(server+".log", true);
addLogEntry(log);
log.close();
log = new FileReader(server+".log");
rss = new FileWriter(server+".xml");
writeLogToRss(log, rss);
log.close();
rss.close();

